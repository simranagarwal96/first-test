<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>sample-api-codegen</artifactId>
    <groupId>sampleAPIs</groupId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>sample-version-three-grpc-client</artifactId>
  <name>Sample V3 Grpc Client</name>
  <description>Grpc Client For Backend Proxy</description>

  <dependencies>
    <dependency>
      <groupId>sampleAPIs</groupId>
      <artifactId>sample-springmvc-interfaces</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>sampleAPIs</groupId>
      <artifactId>sample-java-dto-definitions</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>sampleAPIs</groupId>
      <artifactId>sample-version-three-protobuf-mappers</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>sampleAPIs</groupId>
      <artifactId>sample-version-three-proto-to-java</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-stub</artifactId>
      <version>${io.grpc.version}</version>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-protobuf</artifactId>
      <version>${io.grpc.version}</version>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-netty-shaded</artifactId>
      <version>${io.grpc.version}</version>
    </dependency>
  </dependencies>

  <build>
    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>1.6.1</version>
      </extension>
    </extensions>
    <plugins>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>${project.basedir}/src</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <configuration>
              <target>
                <copy todir="${project.basedir}/src/main/proto" flatten="false">
                  <fileset dir="${project.basedir}/../sample-version-three-protobuf-services/target/generated-sources/swagger">
                    <include name="**/*.proto"/>
                  </fileset>
                </copy>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.xolstice.maven.plugins</groupId>
        <artifactId>protobuf-maven-plugin</artifactId>
        <version>0.6.1</version>
        <configuration>
          <protocArtifact>
            com.google.protobuf:protoc:${protobuf-version}:exe:${os.detected.classifier}
          </protocArtifact>
          <pluginId>grpc-java</pluginId>
          <pluginArtifact>
            io.grpc:protoc-gen-grpc-java:${io.grpc.version}:exe:${os.detected.classifier}
          </pluginArtifact>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>compile-custom</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.swagger.codegen.v3</groupId>
        <artifactId>swagger-codegen-maven-plugin</artifactId>
        <version>${swagger-codegen.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>
                ${project.build.directory}/${api.defs}-${project.version}/swagger-all-${project.version}.yaml
              </inputSpec>
              <language>com.github.krr.swagger.codegen.generators.proto.v3.GrpcClientGenerator</language>
              <generateSupportingFiles>false</generateSupportingFiles>
              <generateModels>false</generateModels>
              <generateModelDocumentation>false</generateModelDocumentation>
              <generateModelTests>false</generateModelTests>
              <generateApiTests>false</generateApiTests>
              <generateApis>true</generateApis>
              <generateApiDocumentation>false</generateApiDocumentation>
              <additionalProperties>
                <additionalProperty>enableSelfContainedPackaging=true,protoPackagePrefix=proto3,servicePort=8888</additionalProperty>
              </additionalProperties>
              <configOptions>
                <dateLibrary>java8</dateLibrary>
              </configOptions>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>com.nutanix.nutanix-core.ntnx-api.dev-platform</groupId>
            <artifactId>dev-platform-codegen-templates</artifactId>
            <version>${openapi-dev-platform.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources/swagger/src</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
