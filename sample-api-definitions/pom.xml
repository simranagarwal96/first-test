<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <parent>
    <artifactId>sample</artifactId>
    <groupId>sampleAPIs</groupId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>

  <modelVersion>4.0.0</modelVersion>

  <artifactId>sample-api-definitions</artifactId>
  <packaging>jar</packaging>

  <name>Sample API project</name>

  <profiles>
    <profile>
      <id>check-compatibility</id>
      <!-- This profile will be activated when -DprevVersion property is set -->
      <!-- This needs to kick in once you have bumped up your version -->
      <activation>
        <property>
          <name>prevVersion</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack</id>
                <phase>validate</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>sampleAPIs</groupId>
                      <artifactId>sample-api-definitions</artifactId>
                      <version>${prevVersion}</version>
                      <type>tgz</type>
                      <overWrite>false</overWrite>
                    </artifactItem>
                  </artifactItems>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                  <overWriteReleases>false</overWriteReleases>
                  <overWriteSnapshots>true</overWriteSnapshots>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <build>
    <plugins>
      <plugin>
        <groupId>com.nutanix.nutanix-core.ntnx-api.dev-platform</groupId>
        <artifactId>dev-platform-maven-plugins</artifactId>
        <version>${openapi-dev-platform.version}</version>
        <configuration>
          <apiBaseDir>${project.basedir}/defs</apiBaseDir>
          <!--<openApiWriterExtensionPlugins>-->
          <!-- Add any custom writer extensions here
          <openApiWriterExtensionPlugin>
            Fully qualified class name of the plugin
          </openApiWriterExtensionPlugin> -->
          <!--</openApiWriterExtensionPlugins>-->
          <!-- Version info to diff with -->
          <!-- <prevPlatformVersion>1.0.0-SNAPSHOT</prevPlatformVersion>
          <currentApiVersion>5.12</currentApiVersion> -->
          <prevApiVersion>None</prevApiVersion>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
              <goal>generate-diff</goal>
              <goal>verify-yaml</goal>
            </goals>
          </execution>
        </executions>
        <!--<dependencies>-->
        <!-- INCLUDE DEPENDENCIES WHERE THE WRITER EXTENSIONS CAN BE FOUND -->
        <!--</dependencies>-->
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.1.1</version>
        <configuration>
          <appendAssemblyId>false</appendAssemblyId>
          <attach>true</attach>
          <descriptors>
            <descriptor>${project.basedir}/assembly/assembly.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <id>generate-tar-gz</id>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>it.traeck.tools.openapi</groupId>
        <artifactId>openapi-validator-maven-plugin</artifactId>
        <version>1.0.1</version>
        <executions>
          <execution>
            <phase>install</phase>
            <goals>
              <goal>validate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.build.directory}/generated-api-artifacts/swagger-all-${project.version}.yaml</inputSpec>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
